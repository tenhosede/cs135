//Bruce Powell @ UNLV
//Assignment 2 "Magic Carpeting Co. Calculator"
//Lecture Section 1003
//Lab Section 1009
//This program accepts inputs for room dimensions
//and material costs. It outputs material costs,
//taxes, labor, and the total due.
#include<iostream>
#include<cmath>
#include<iomanip>
using namespace std;


const double feetPerYard = 3.0; //constants used in calculations
const double inchesPerFoot = 12.0;
const double laborCost = 3.50;
const double salesTax = 0.05;

int main()
{
  double roomLengthft = 0.0; //room length in feet and inches
  double roomLengthin = 0.0;
  double roomLengthYards = 0.0; //length in yards derived from input
  double roomWidthft = 0.0; // room width in feet and inches
  double roomWidthin = 0.0;
  double roomWidthYards = 0.0; //width in yards derivedpuit
  double roomSquareYards = 0.0; //calculated area of the room
  double carpetPrice = 0.0; //input price of desired carper
  double padPrice = 0.0; //input price of desired pad
  double roomCarpetTotal = 0.0; //calculated cost of carpet
  double roomPadTotal = 0.0; //calculated cost of padding
  double materialTaxTotal = 0.0; //total for materials
  double roomMaterialTax = 0.0; //taxes due from material cost
  double roomLaborTotal = 0.0; //calculated installation labor fee
  double roomTotalDue = 0.0; //total due for labor, tax, and material
  const int lineLength = 36; //constants used for formatting output
  const int labelLength = 26;
  const int valueLength = 7;


  cout << "Please enter the length of the room (feet inches) \n" ;
  cin >> roomLengthft >> roomLengthin;
  cout << "Please enter the width of the room (feet inches) \n" ;
  cin >> roomWidthft >> roomWidthin;
  cout << "Please enter the cost per square yard of carpet \n";
  cin >> carpetPrice;
  cout << "Please enter the cost per square yard of padding \n";
  cin >> padPrice;
  
  //Uses uner input values to calculate material, tax, and labor costs
  roomLengthYards = ((roomLengthin/inchesPerFoot) + roomLengthft)/feetPerYard;
  roomWidthYards = ((roomWidthin/inchesPerFoot) + roomWidthft)/feetPerYard;
  roomSquareYards = ceil(roomLengthYards * roomWidthYards);
  roomCarpetTotal = roomSquareYards * carpetPrice;
  roomPadTotal = roomSquareYards * padPrice;
  roomMaterialTax = (roomCarpetTotal + roomPadTotal) * salesTax;
  roomLaborTotal = roomSquareYards * laborCost;
  roomTotalDue = roomCarpetTotal + roomPadTotal + roomMaterialTax + roomLaborTotal;

  //outputs calculated values in desired format

  cout << setw(lineLength) << setfill('=') << "=\n";
  cout << "MAGIC CARPET ESTIMATE \nGenerated by Bruce Powell \nAssignment #2 \n";
  cout << setw(lineLength) << "=\n";
  cout << "Room dimensions\n";
  cout << setw(labelLength) << left << setfill(' ') << "Length:" << setw(3) << right << roomLengthft << "\'" << setw(3) << roomLengthin << "\"\n";
  cout << setw(labelLength) << left << "Width:" << setw(3) << right << roomWidthft << "\'" << setw(3) << roomWidthin << "\"\n";
  cout << left << fixed << setprecision(2);
  cout << setw(labelLength) << "Carpet cost per sq yd:" << setw(2) << "$" << setw(valueLength) << right << carpetPrice << endl;
  cout << setw(labelLength) << left << "Padding cost per sq yd:" << setw(2) << "$" << setw(valueLength) << right << padPrice << endl;
  cout << setw(labelLength + 4) << left << "Sq Yds Required:" << setw(valueLength) << setprecision(0) << right << setw(5) << roomSquareYards << endl << endl;
  cout << setprecision(2);
  cout << left << setw(labelLength) << setfill('.') << "Carpet cost" << "$" << setw(valueLength + 1) << right << setfill(' ') << roomCarpetTotal << endl;
  cout << left << setw(labelLength) << setfill('.') << "Padding Cost" << setw(valueLength + 2) << right << setfill(' ') << roomPadTotal << endl;
  cout << left << setw(labelLength) << setfill('.') << "Sales Tax" << setw(valueLength + 2) << right << setfill(' ') << roomMaterialTax << endl;
  cout << left << setw(labelLength) << setfill('.') << "Labor" << setw(valueLength + 2) << right << setfill(' ') << roomLaborTotal << endl;
  cout << left << setw(labelLength) << setfill('.') << "Total due" << "$" << setw(valueLength + 1) << right << setfill(' ') << roomTotalDue << endl;
  cout << setw(lineLength) << setfill('=') << " " << endl;
  return(0);

}
